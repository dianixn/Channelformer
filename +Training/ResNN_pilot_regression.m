Data_Samples = 25000;
Training_Set_Rate = 0.95;
ValidationFrequency = 300;
SNR = 5:5:25;

[XTrain_RSRP, YTrain_RSRP, XValidation_RSRP, YValidation_RSRP] = Data_Generation.Data_Generation_Residual(Training_Set_Rate, SNR, Data_Samples, 'Propogation'); % Propogation Rayleigh_doppler

Input_Layer_Size = size(XTrain_RSRP, [1, 2, 3]);

Residual_NN.Residual_transposed
%Residual_NN.Interpolation_ResNet

% Option settings
Options = trainingOptions('adam', ...
    'MaxEpochs',100, ...
    'MiniBatchSize',128, ...
    'InitialLearnRate',1e-3, ...
    'LearnRateSchedule','piecewise', ...
    'LearnRateDropFactor',0.5, ...
    'LearnRateDropPeriod',100, ...
    'ValidationData',{XValidation_RSRP, YValidation_RSRP}, ...
    'ValidationFrequency',ValidationFrequency, ...
    'Shuffle','every-epoch', ...
    'Verbose',1, ...
    'L2Regularization',0.00000000001, ...
    'ExecutionEnvironment','auto', ...
    'Plots','training-progress');

% Train Network
[DNN_Trained, info] = trainNetwork(XTrain_RSRP, YTrain_RSRP, lgraph, Options);
